// Test correct enum with consistent argument types
import std::io::{printf, print, println};

// Correct enum with consistent string arguments
enum HttpStatus {
    OK("200", "OK"),
    NOT_FOUND("404", "Not Found"),
    INTERNAL_ERROR("500", "Internal Server Error");

    pub fin var code -> string;
    pub fin var message -> string;

    constructor(code: string, message: string) {
        self.code = code;
        self.message = message;
    }
}

// Correct enum with consistent numeric arguments
enum Color {
    RED(255, 0, 0),
    GREEN(0, 255, 0),
    BLUE(0, 0, 255);

    pub fin var r -> i32;
    pub fin var g -> i32;
    pub fin var b -> i32;

    constructor(r: i32, g: i32, b: i32) {
        self.r = r;
        self.g = g;
        self.b = b;
    }
}

print("Correct enum validation test completed successfully!");
print("Enums with consistent argument types work correctly"); 