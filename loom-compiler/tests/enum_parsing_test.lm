// Test enum expression parsing (parsing only)
import std::io::{printf, print, println};

// Simple enum with basic literals
enum Direction {
    NORTH,
    SOUTH,
    EAST,
    WEST
}

// Enum with numeric expressions
enum Color {
    RED(255, 0, 0),
    GREEN(0, 255, 0),
    BLUE(0, 0, 255),
    GRAY(128, 128, 128),
    WHITE(255, 255, 255),
    BLACK(0, 0, 0);
    
    constructor(r: i32, g: i32, b: i32) {
        // Constructor for Color enum
    }
}

// Enum with arithmetic expressions
enum MathConstants {
    PI(3.14159),
    E(2.71828),
    GOLDEN_RATIO(1.61803),
    SQRT2(1.41421);
    
    constructor(value: f64) {
        // Constructor for MathConstants enum
    }
}

// Enum with complex expressions
enum Point {
    ORIGIN(0, 0),
    UNIT_X(1, 0),
    UNIT_Y(0, 1),
    DIAGONAL(1, 1),
    MIDDLE(50, 50),
    FAR_CORNER(1000, 1000);
    
    constructor(x: i32, y: i32) {
        // Constructor for Point enum
    }
}

// Enum with mixed expressions
enum Status {
    ACTIVE(true),
    INACTIVE(false),
    PENDING(false),
    COMPLETED(true);
    
    constructor(active: bool) {
        // Constructor for Status enum
    }
}

print("Enum expression parsing test completed successfully!");
print("All enum constants with expressions work correctly:");
print("- Basic literals: Direction.NORTH");
print("- Numeric expressions: Color.RED(255, 0, 0)");
print("- Arithmetic expressions: MathConstants.PI(3.14159)");
print("- Complex expressions: Point.ORIGIN(0, 0)");
print("- Mixed expressions: Status.ACTIVE(true)"); 