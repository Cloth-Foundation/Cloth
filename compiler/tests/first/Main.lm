mod first

enum Type {
    HUMAN("Human"),
    DOG("Dog"),
    CAT("Cat")

    priv fin     val: string
    pub Type(val: string) {
        self.val = val
    }
    pub func toString(): string {
        ret self.val
    }
}

pub template class Animal {

    pub Animal() {

    }

    pub template var getType(): Type;

}

class Human: Animal {

    var type: Type

    pub Human(type: Type) {
        self.type = type
    }

    pub override var getType(): Type {
        ret self.type
    }

}

pub class Person: Human {
    priv var name: string

    pub Person(n: string, type: Type) {
        super(type)
        self.name = n
    }

    pub func greet(): void {
        println("hi, I am " + self.name)
    }

    pub func get(): self {
        ret self
    }
}

pub func main(argc: []i32, argv: []string): i32 {
    ret Main()
}

pub func Main(): i32 {
    var one: Person = new Person("onetwo", Type.HUMAN)
    var two: Person = one.get()
    two.greet()
    println(one.getType().toString())
    ret 0x0
}