mod first

import first.Human::{ Human, Color }

enum Type {
    HUMAN("Human"),
    DOG("Dog"),
    CAT("Cat")

    priv fin val: string
    pub Type(val: string) {
        self.val = val
    }
    pub func toString(): string {
        ret self.val
    }
}

pub template class Animal {

    pub Animal() {

    }

    pub template var getType(): Type

}

pub func main(argc: []i32, argv: []string): i32 {
    let returnCode = Main()

    ret returnCode
}

pub func Main(): i8 {
    var alice: Human = new Human("Alice", 21, Color.BLUE)
    var bob: Human = new Human("Bob", 23, Color.RED)
    alice.greet()
    bob.greet()

    println(alice.type() == bob.type() ? "Alice and Bob are of the same type." : null)

    println(alice.getAge() > bob.getAge() ? "Alice is older than Bob." : alice.getAge() < bob.getAge() ? "Bob is older than Alice." : "Alice and Bob are the same age.")

    # Flip alice and bob values
    let temp = alice
    alice = bob
    bob = temp

    loop x in range(10, -1, -1) {
        println(x)
    }

    ret 0xFFF
}